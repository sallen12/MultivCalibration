% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preranks.R
\name{preranks}
\alias{preranks}
\alias{get_prerank}
\title{Pre-rank functions to assess multivariate calibration}
\usage{
get_prerank(y, x, prerank, return_rank = TRUE, ...)
}
\arguments{
\item{y}{multivariate observation (numeric vector of length d).}

\item{x}{samples from multivariate forecast distribution (numeric matrix with d rows and M columns).}

\item{prerank}{the pre-rank function to be used. This is either a string from
a list of possible options (see details below), or a function.}

\item{return_rank}{logical specifying whether the rank should be returned
(rather than the vector of pre-ranks).}

\item{...}{additional arguments to the pre-rank function.}
}
\value{
Rank of the pre-rank transformed observation among the forecast sample (if
\code{return_rank = T}), or a vector of pre-ranks corresponding to the observation
and sample members (if \code{return_rank = F}).
}
\description{
Calculate pre-ranks of multivariate forecasts and observations
}
\details{
When assessing multivariate calibration, it is common to convert the multivariate
forecasts and observations into univariate objects, and then apply univariate
methods. In the context of multivariate calibration, the function used to
perform this transformation is often called a pre-rank function. The function
\code{get_prerank()} can be used to apply this transformation, and
to extract the rank of the transformed observation among the transformed
samples from the forecast (i.e. ensemble members).

The argument \code{prerank} specifies which pre-rank function to use. This can
either be a string corresponding to one of several in-built options, or it can
be a user-specified function.

The in-built pre-rank functions currently available are the multivariate rank
(\code{prerank = "multivariate_rank"}), the average rank (\code{"average_rank"}),
the band-depth rank (\code{"band_depth"}), the mean (\code{"mean"}), the variance
(\code{"variance"}), the energy score (\code{"energy_score"}), the
fraction of threshold exceedances (\code{"FTE"}), and the variogram
(\code{"variogram"}). See references for details.

If \code{prerank} is a function, it should convert a vector of dimension d, to
a single numeric value. Checks are in place to ensure this is satisfied. The
\code{prerank} function could also take additional inputs, in which case these
inputs should be included as additional arguments in \code{get_prerank()}.
See examples below.

The variogram pre-rank function requires that an additional argument \code{h} is
provided that specifies the lag at which to calculate the variogram.
This should be a single positive integer. Alternatively, it can be a vector containing
multiple positive integers. In this case, the variogram is calculated for each
lag in the vector and the sum of the variograms is returned.

The FTE pre-rank requires a threshold parameter \code{t}, which must be a single real value.
}
\examples{
d <- 5
M <- 10

library(MASS)

y <- as.vector(mvrnorm(1, rep(0, d), diag(d)))
x <- t(mvrnorm(M, rep(0, d), diag(d)))

get_prerank(y, x, prerank = "average_rank", return_rank = FALSE)
get_prerank(y, x, prerank = "average_rank")

get_prerank(y, x, prerank = "variance", return_rank = FALSE)
get_prerank(y, x, prerank = "variance")

get_prerank(y, x, prerank = "FTE", t = 0.5, return_rank = FALSE)
get_prerank(y, x, prerank = "FTE", t = 0.5) # ties are resolved at random
get_prerank(y, x, prerank = "FTE", t = -0.5)


### use sapply to apply to several forecast cases
n <- 1000
y <- t(mvrnorm(n, rep(0, d), diag(d)))

# calibrated forecasts
x <- array(t(mvrnorm(n*M, rep(0, d), diag(d))), c(d, M, n))
mvranks <- sapply(1:n, function(i) get_prerank(y[, i], x[, , i], prerank = "mean"))
barplot(table(mvranks)) # observation is equally likely to take each rank

# miscalibrated mean
x <- array(t(mvrnorm(n*M, rep(-0.5, d), diag(d))), c(d, M, n))
mvranks <- sapply(1:n, function(i) get_prerank(y[, i], x[, , i], prerank = "mean"))
barplot(table(mvranks))
# forecast's under-estimate the mean, so the observation often has a higher rank
# when evaluated using the mean pre-rank function

# miscalibrated variance
x <- array(t(mvrnorm(n*M, rep(0, d), 0.7*diag(d))), c(d, M, n))
mvranks <- sapply(1:n, function(i) get_prerank(y[, i], x[, , i], prerank = "variance"))
barplot(table(mvranks)) # observation is more likely to take a higher rank
# forecast's under-estimate the variance, so the observation often has a higher variance rank
# when evaluated using the variance pre-rank function

# custom pre-rank function
x <- array(t(mvrnorm(n*M, rep(0, d), diag(d))), c(d, M, n))
prerank <- function(x) mean((x - mean(x))^3) # function to quantify skew
mvranks <- sapply(1:n, function(i) get_prerank(y[, i], x[, , i], prerank = prerank))
barplot(table(mvranks))

prerank <- function(x, q) mean((x - mean(x))^q) # function to quantify q-th centered moment
mvranks <- sapply(1:n, function(i) get_prerank(y[, i], x[, , i], prerank = prerank, q = 3))
barplot(table(mvranks))

}
\references{
Gneiting, T., Stanberry, L. I., Grimit, E. P., Held, L. and N. A. Johnson (2008):
`Assessing probabilistic forecasts of multivariate quantities, with an application to ensemble predictions of surface winds'.
\emph{Test} 17, 211-235.
\doi{10.1007/s11749-008-0114-x}

Thorarinsdottir, T. L., Scheuerer, M. and C. Heinz (2016):
`Assessing the calibration of high-dimensional ensemble forecasts using rank histograms'.
\emph{Journal of computational and graphical statistics} 25, 105-122.
\doi{10.1080/10618600.2014.977447}

Knüppel, M., Krüger, F., & Pohle, M. O. (2022):
`Score-based calibration testing for multivariate forecast distributions'.
\emph{arXiv preprint}. arXiv:2211.16362.
\doi{10.48550/arXiv.2211.16362}

Allen, S., Ziegel, J. and D. Ginsbourger (2023):
`Assessing the calibration of multivariate probabilistic forecasts'.
\emph{arXiv preprint}. arXiv:2307.05846.
\doi{10.48550/arXiv.2307.05846}
}
\author{
Sam Allen
}
